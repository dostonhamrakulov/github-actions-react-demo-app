name: Deploy Project
on:
  pull_request:
    types:
      - opened
  push:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
  build-job:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      js-script-file-name: ${{ steps.publish-name.outputs.extracted-script-file-name }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Publish JS File name
        id: publish-name
        run: find dist/assets/*.js -type f -execdir echo 'extracted-script-file-name={}' >> $GITHUB_OUTPUT ';'
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
#          path: |
#            dist
#            package.json
  deploy:
    needs: build-job
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output the content folder structure
        run: ls -l
      - name: Output file name from the build-job
        run: echo "${{ needs.build-job.outputs.js-script-file-name }}"
      - name: Deploy
        run: echo "Deploying ..."
